import 'package:http/http.dart' as http;
import 'dart:convert'; //encoders and decoders for converting between different data representations, including JSON
import '../models/user.dart';

class EdgeserverApi {
  static String server = 'edge-service-kevinvandeputte-tm.cloud.okteto.net'; //to define



 static Future<List<User>> fetchScore() async {

    //URL
    var url = Uri.https(server, '/scores');

    final response = await http.get(url);

    if (response.statusCode == 200) {
      List jsonResponse = json.decode(response.body);
      return jsonResponse.map((user) => User.fromJson(user)).toList();
    } else {
      throw Exception('Failed to load users');
    }
  }

    //Create User
  static Future<User> createUser(String _username, int _avatarID) async {
    //set up url
    var url = Uri.https(server,"/user", {'username': _username, 'avatarID': _avatarID.toString()});

    //POST
    final http.Response response = await http.post(url);

    //check response
    if (response.statusCode == 200){
      return User.fromJson(jsonDecode(response.body));
    } else{
      throw Exception("Failed to create user");
    }
  }

}